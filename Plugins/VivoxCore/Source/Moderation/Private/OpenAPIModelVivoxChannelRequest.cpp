/**
 * Unity Moderation Events API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: alpha-1.0
 * Contact: mp-suite-player-safety@unity3d.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIModelVivoxChannelRequest.h"

#include "ModerationModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace Moderation
{

void OpenAPIModelVivoxChannelRequest::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (Uri.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("uri")); WriteJsonValue(Writer, Uri.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIModelVivoxChannelRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("uri"), Uri);

	return ParseSuccess;
}

}
