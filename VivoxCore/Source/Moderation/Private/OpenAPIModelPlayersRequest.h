/**
 * Unity Moderation Events API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: alpha-1.0
 * Contact: mp-suite-player-safety@unity3d.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"

namespace Moderation
{

/*
 * OpenAPIModelPlayersRequest
 *
 * 
 */
class MODERATION_API OpenAPIModelPlayersRequest : public Model
{
public:
    virtual ~OpenAPIModelPlayersRequest() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* Channels is the list of vivox channels the player was part of, if the player was part of the same channels as the reporting / reported player, the player track will be added to the safevoice analysis */
	TOptional<TArray<FString>> Channels;
	/* Custom is the list of key:values custom properties a developer might want to add to the payload. */
	TOptional<TMap<FString, TSharedPtr<FJsonValue>>> CustomProperties;
	/* PlayerID is the unity player id of a participant of the game session */
	TOptional<FString> PlayerId;
	/* VivoxId is the vivox sip uri of the participant */
	TOptional<FString> VivoxId;
};

}
