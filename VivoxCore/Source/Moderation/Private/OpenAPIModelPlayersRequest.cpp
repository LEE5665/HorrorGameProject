/**
 * Unity Moderation Events API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: alpha-1.0
 * Contact: mp-suite-player-safety@unity3d.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIModelPlayersRequest.h"

#include "ModerationModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace Moderation
{

void OpenAPIModelPlayersRequest::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Channels.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("channels")); WriteJsonValue(Writer, Channels.GetValue());
	}
	if (CustomProperties.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_properties")); WriteJsonValue(Writer, CustomProperties.GetValue());
	}
	if (PlayerId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("playerId")); WriteJsonValue(Writer, PlayerId.GetValue());
	}
	if (VivoxId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("vivoxId")); WriteJsonValue(Writer, VivoxId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIModelPlayersRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("channels"), Channels);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_properties"), CustomProperties);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("playerId"), PlayerId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("vivoxId"), VivoxId);

	return ParseSuccess;
}

}
