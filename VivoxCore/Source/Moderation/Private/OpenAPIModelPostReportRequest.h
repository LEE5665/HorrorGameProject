/**
 * Unity Moderation Events API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: alpha-1.0
 * Contact: mp-suite-player-safety@unity3d.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIModelPlayersRequest.h"
#include "OpenAPIModelVivoxChannelRequest.h"

namespace Moderation
{

/*
 * OpenAPIModelPostReportRequest
 *
 * 
 */
class MODERATION_API OpenAPIModelPostReportRequest : public Model
{
public:
    virtual ~OpenAPIModelPostReportRequest() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* Players is the list of players that might be involved in the incident, their participation will be included in evidence collection. */
	TOptional<TArray<OpenAPIModelPlayersRequest>> Players;
	/* ReportReason indicates the category of the infraction that led to this player being reported. */
	FString ReportReason;
	/* ReportTimestamp is the timestamp of when the offending event took place, in ISO-8601 format. */
	FString ReportTimestamp;
	/* ReportedUnityPlayerID is the Unity player ID of the player that is being reported */
	FString ReportedUnityPlayerId;
	/* ReportedVivoxPlayerID is Vivox ID of the player that is being reported */
	TOptional<FString> ReportedVivoxPlayerId;
	/* ReportingVivoxPlayerID is Vivox ID of the player that created the report */
	TOptional<FString> ReportingVivoxPlayerId;
	/* VivoxChannels contains the list of Vivox channels in the game session. They are a list of tuple objects containing the name and URI. */
	TOptional<TArray<OpenAPIModelVivoxChannelRequest>> VivoxChannels;
};

}
